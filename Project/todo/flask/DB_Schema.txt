USERS
	- ID - INT
	- USERNAME - VARCHAR
	- PASSWORD - VARCHAR
	- DOB - DATETIME
	- CREATED_ON - DATETIME
	- IS_DELETED - TINYINT
	
CREATE TABLE `orange_todo`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(100) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  `dob` DATETIME NOT NULL,
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `is_deleted` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE);


ALTER TABLE `orange_todo`.`users` 
CHANGE COLUMN `dob` `dob` VARCHAR(100) NOT NULL ;

	
TASKS
	- ID
	- USER_ID
	- TASK_NAME
	- END_TIME
	- CREATED_ON
	- IS_DELETED
	
CREATE TABLE `orange_todo`.`tasks` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `task_name` VARCHAR(100) NOT NULL,
  `end_time` DATETIME NOT NULL,
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `is_deleted` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `user_FK_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `user_FK`
    FOREIGN KEY (`user_id`)
    REFERENCES `orange_todo`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION);

	

API:
	USERS:
		- LOGIN
		- SIGNUP
		- RESET_PASSWORD
	TASKS:
		- GET LIST OF LISTS
		- CREATION
		- UPDATE
			- STATUS
			- END_TIME
			- TASK_NAME
		- DELETE